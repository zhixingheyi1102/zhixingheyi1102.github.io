<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>js中的面向对象</title>
    <link href="/2019/11/24/js%E4%B8%AD%E7%9A%84%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    <url>/2019/11/24/js%E4%B8%AD%E7%9A%84%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</url>
    
    <content type="html"><![CDATA[<h1 id="类的创建"><a href="#类的创建" class="headerlink" title="类的创建"></a>类的创建</h1><p>使用构造函数的方法创建类，类的名称首字母一般大写。<br>    function 类名（形参）<br>    {<br>        this.属性名=值；//<em>用this指向实例对象</em><br>        ······<br>    }</p><h1 id="类的实例化————创建对象"><a href="#类的实例化————创建对象" class="headerlink" title="类的实例化————创建对象"></a>类的实例化————创建对象</h1><p>+对象的种类<br>1.内建对象<br>  类似c中的库函数，由js提供，可直接调用，如math，string，date。<br>2.宿主对象<br>  由js的运行环境提供的对象，如bom,dom。<br>3.自建对象<br>  自定义创建，往里添加属性的对象。<br>+创建方法<br>1.调用类（构造函数）<br>    var obj=new 类名（）；<br>2.字面量形式<br>    var obj=<br>    {<br>        名：值，* 注意：和，的使用*<br>        名：值  * 最后一行不加，*<br>    }；</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>hello-world</title>
    <link href="/2019/11/10/hello-world/"/>
    <url>/2019/11/10/hello-world/</url>
    
    <content type="html"><![CDATA[<h1 id="hello-world"><a href="#hello-world" class="headerlink" title="hello world"></a>hello world</h1><p>不要回答！<br>不要回答！<br>不要回答!</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>